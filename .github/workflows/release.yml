on:
  release:
    types: [created]

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Setup Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip android-ndk-r25c-linux.zip
          echo "ANDROID_NDK_HOME=$PWD/android-ndk-r25c" >> $GITHUB_ENV
          echo "$PWD/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Installing needed dependencies
        run: sudo apt-get install -y libasound2-dev protobuf-compiler
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Adding Android target
        run: rustup target add aarch64-linux-android armv7-linux-androideabi
      - name: Installing cargo-ndk
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-ndk --force
      - name: Setup RUSTFLAGS
        run: echo "RUSTFLAGS=-C link-arg=-lc++_shared" >> $GITHUB_ENV
      - name: Building Android artifacts
        uses: actions-rs/cargo@v1
        with:
          command: ndk
          args: -t armeabi-v7a -t arm64-v8a -o ./jniLibs build --release
      - name: Copy libc++_shared.so
        run: |
          cp $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./jniLibs/arm64-v8a/
          cp $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/libc++_shared.so ./jniLibs/armeabi-v7a/
      - name: Archiving artifacts
        run: |
          tar -czvf songbird-android-rs.tar.gz ./jniLibs
          sha256sum songbird-android-rs.tar.gz > songbird-android-rs.tar.gz.sha256
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            songbird-android-rs.tar.gz
            songbird-android-rs.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
